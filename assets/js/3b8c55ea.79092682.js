"use strict";(self.webpackChunkthea_gs=self.webpackChunkthea_gs||[]).push([[3217],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(h,i(i({ref:t},c),{},{components:a})):n.createElement(h,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9803:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:1},i="Installation",s={unversionedId:"installation",id:"installation",title:"Installation",description:"THEA-GS is an  open-source digital contact tracing system that was born out of the Project-THEA whose focus was  the haulage industry.",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/thea-gs/docs/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/thea-gs/docs/intro"},next:{title:"Architecture",permalink:"/thea-gs/docs/architecture"}},o={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Installation steps",id:"installation-steps",level:2},{value:"Install via Git",id:"install-via-git",level:3},{value:"Install PHP dependencies:",id:"install-php-dependencies",level:3},{value:"Install NPM dependencies:",id:"install-npm-dependencies",level:3},{value:"Build assets:",id:"build-assets",level:3},{value:"CONFIGURATION",id:"configuration",level:2},{value:"Setup configuration:",id:"setup-configuration",level:3},{value:"Generate application key:",id:"generate-application-key",level:3},{value:"Create a database:",id:"create-a-database",level:3},{value:"Update .env with database details:",id:"update-env-with-database-details",level:3},{value:"Run database migrations:",id:"run-database-migrations",level:3},{value:"Run database seeders:",id:"run-database-seeders",level:3},{value:"Start instance of Valhalla",id:"start-instance-of-valhalla",level:3},{value:"Run development server:",id:"run-development-server",level:3}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("p",null,"THEA-GS is an  open-source digital contact tracing system that was born out of the ",(0,r.kt)("a",{parentName:"p",href:"https://project-thea.org/"},"Project-THEA")," whose focus was  the haulage industry.\nThe tool is designed to combine anonymized time-stamped geo-location information relative to the road infrastructure with COVID-19 test results to support public health efforts to limit transmission and the safe reopening of economies."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"The minimum requirement for this project is your Web server supports PHP 7.3.0 and you have\nNode.js a javascript runtime environment installed locally on your computer. "),(0,r.kt)("h2",{id:"installation-steps"},"Installation steps"),(0,r.kt)("h3",{id:"install-via-git"},"Install via Git"),(0,r.kt)("p",null,"Clone the repo locally:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/project-thea/project-thea-server.git\n\ncd project-thea-api\n\n")),(0,r.kt)("h3",{id:"install-php-dependencies"},"Install PHP dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"composer install\n")),(0,r.kt)("h3",{id:"install-npm-dependencies"},"Install NPM dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install\n")),(0,r.kt)("h3",{id:"build-assets"},"Build assets:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm run dev\n")),(0,r.kt)("h2",{id:"configuration"},"CONFIGURATION"),(0,r.kt)("h3",{id:"setup-configuration"},"Setup configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cp .env.example .env\n")),(0,r.kt)("h3",{id:"generate-application-key"},"Generate application key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"php artisan key:generate\n")),(0,r.kt)("h3",{id:"create-a-database"},"Create a database:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE DB_DATABASE;\n")),(0,r.kt)("h3",{id:"update-env-with-database-details"},"Update .env with database details:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"DB_CONNECTION=<DB_CONNECTION>\nDB_HOST=<DB_HOST>\nDB_PORT=<DB_PORT>\nDB_DATABASE=<DB_DATABASE>\nDB_USERNAME=<DB_USERNAME>\nDB_PASSWORD=<DB_PASSWORD>\n")),(0,r.kt)("h3",{id:"run-database-migrations"},"Run database migrations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"php artisan migrate\n")),(0,r.kt)("h3",{id:"run-database-seeders"},"Run database seeders:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"php artisan db:seed\n")),(0,r.kt)("h3",{id:"start-instance-of-valhalla"},"Start instance of Valhalla"),(0,r.kt)("p",null,"Start an instance of the Valhalla service and update the  VALHALLA_HOST environment variable in the\n.env file"),(0,r.kt)("h3",{id:"run-development-server"},"Run development server:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"php artisan serve\n")))}u.isMDXComponent=!0}}]);